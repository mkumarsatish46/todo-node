name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Push Image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: vars
        name: Determine image names
        run: |
          TAG=${GITHUB_SHA::7}
          if [ -n "${{ secrets.GHCR_TOKEN }}" ]; then
            IMAGE=ghcr.io/${{ github.repository_owner }}/todo-node:${TAG}
            IMAGE_LATEST=ghcr.io/${{ github.repository_owner }}/todo-node:latest
          else
            IMAGE=${{ secrets.DOCKER_USERNAME }}/todo-node:${TAG}
            IMAGE_LATEST=${{ secrets.DOCKER_USERNAME }}/todo-node:latest
          fi
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=${IMAGE_LATEST}" >> $GITHUB_ENV

      - name: Login to GHCR
        if: ${{ secrets.GHCR_TOKEN }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_LATEST }}
          platforms: linux/amd64,linux/arm64

      - name: Set pushed image output
        id: push-image
        run: |
          echo "image=${{ env.IMAGE }}" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Kubernetes
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure kubeconfig from secret
        if: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Apply manifests and update image
        env:
          IMAGE: ${{ needs.build.outputs.image }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl set image deployment/node-todo-deployment node-todo=${IMAGE} --record
          kubectl rollout status deployment/node-todo-deployment --timeout=120s

      - name: Confirm deployment
        run: |
          kubectl get pods -l app=node-todo -o wide
          kubectl get svc node-todo-service -o wide || true